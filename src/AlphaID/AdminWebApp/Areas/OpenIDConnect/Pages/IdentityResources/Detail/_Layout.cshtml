@using Duende.IdentityServer.EntityFramework.Entities
@inject ConfigurationDbContext DbContext
@{
    Layout = "Shared/_Layout";
    IdentityResource? identityResource = default!;
    if (int.TryParse(ViewContext.RouteData.Values["anchor"]?.ToString(), out var resourceId))
    {
        identityResource = DbContext.IdentityResources.FirstOrDefault(p => p.Id == resourceId);
    }

    ViewBag.Title = identityResource?.DisplayName ?? "";
}

@section head {
    @await RenderSectionAsync("head", false)
}

@section Breadcrumb {
    <li class="breadcrumb-item">
        <a asp-page="/Clients/Index">@L["Identity Resources"]</a>
    </li>
}

@section PageHeader {
    <h1>@identityResource?.DisplayName</h1>
}

<div class="card">
    <div class="row">
        <div class="col-12 col-md-2 border-end">
            <div class="card-body">
                <div class="list-group list-group-transparent">
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/OpenIDConnect/IdentityResources/Detail/@(resourceId)!" asp-page="Index" asp-route-anchor="@ViewContext.RouteData.Values["anchor"]">@L["Overview"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/OpenIDConnect/IdentityResources/Detail/@(resourceId)/Consent" asp-page="Consent" asp-route-anchor="@ViewContext.RouteData.Values["anchor"]">@L["Consent"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/OpenIDConnect/IdentityResources/Detail/@(resourceId)/Secrets" asp-page="Secrets" asp-route-anchor="@ViewContext.RouteData.Values["anchor"]">@L["Secrets"]</a>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-10 d-flex flex-column">
            <div class="card-body">
                @RenderBody()
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @await RenderSectionAsync("Scripts", false)
}