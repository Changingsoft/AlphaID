<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
	  <value>Account</value>
	  <comment>Account</comment>
  </data>
  <data name="Address" xml:space="preserve">
		<value>Address</value>
	</data>
  <data name="Are you sure you want to remove the picture of this profile?" xml:space="preserve">
		<value>Are you sure you want to remove the picture of this profile?</value>
	</data>
  <data name="Authentication statistics" xml:space="preserve">
		<value>Authentication statistics</value>
	</data>
  <data name="Cancel" xml:space="preserve">
		<value>Cancel</value>
	</data>
  <data name="Change person name" xml:space="preserve">
		<value>Change person name</value>
	</data>
  <data name="Change profile picture" xml:space="preserve">
		<value>Change profile picture</value>
	</data>
  <data name="Change username" xml:space="preserve">
		<value>Change username</value>
	</data>
  <data name="Changed at" xml:space="preserve">
		<value>Changed at</value>
	</data>
  <data name="Confirmed" xml:space="preserve">
	  <value>Confirmed</value>
	  <comment>Confirmed</comment>
  </data>
  <data name="Contacts" xml:space="preserve">
		<value>Contacts</value>
	</data>
  <data name="Created at" xml:space="preserve">
		<value>Created at</value>
	</data>
  <data name="Crop" xml:space="preserve">
		<value>Crop</value>
	</data>
  <data name="Crop the image" xml:space="preserve">
		<value>Crop the image</value>
	</data>
  <data name="Danger zone" xml:space="preserve">
		<value>Danger zone</value>
	</data>
  <data name="Date of birth (Age)" xml:space="preserve">
		<value>Date of birth (Age)</value>
	</data>
  <data name="Delete person" xml:space="preserve">
		<value>Delete person</value>
	</data>
  <data name="Display" xml:space="preserve">
		<value>Display</value>
	</data>
  <data name="Email" xml:space="preserve">
		<value>Email</value>
	</data>
  <data name="External logins" xml:space="preserve">
	  <value>External logins</value>
  </data>
  <data name="Misc" xml:space="preserve">
		<value>Misc</value>
	</data>
  <data name="Overview" xml:space="preserve">
		<value>Overview</value>
	</data>
  <data name="Person Id" xml:space="preserve">
		<value>Person ID</value>
	</data>
  <data name="Person name" xml:space="preserve">
	  <value>Person name</value>
  </data>
  <data name="Phone number" xml:space="preserve">
		<value>Phone number</value>
	</data>
  <data name="QQ" xml:space="preserve">
		<value>QQ</value>
	</data>
  <data name="Remove" xml:space="preserve">
		<value>Remove</value>
	</data>
  <data name="Status" xml:space="preserve">
		<value>Status</value>
	</data>
  <data name="Username" xml:space="preserve">
		<value>Username</value>
	</data>
  <data name="Website" xml:space="preserve">
		<value>Website</value>
	</data>
  <data name="Managed accounts" xml:space="preserve">
	  <value>Managed accounts</value>
	  <comment>Managed accounts</comment>
  </data>
  <data name="Enabled" xml:space="preserve">
	  <value>Enabled</value>
	  <comment>Enabled</comment>
  </data>
  <data name="Local login" xml:space="preserve">
	  <value>Local login</value>
	  <comment>Local login</comment>
  </data>
  <data name="Password last set" xml:space="preserve">
	  <value>Password last set</value>
	  <comment>Password last set</comment>
  </data>
  <data name="2Fa authentication" xml:space="preserve">
	  <value>2Fa authentication</value>
	  <comment>2Fa authentication</comment>
  </data>
  <data name="Lockout" xml:space="preserve">
	  <value>Lockout</value>
	  <comment>Lockout</comment>
  </data>
  <data name="Personal info" xml:space="preserve">
	  <value>Personal info</value>
	  <comment>Personal info</comment>
  </data>
  <data name="Phonetic surname" xml:space="preserve">
	  <value>Phonetic surname</value>
	  <comment>Phonetic surname</comment>
  </data>
  <data name="Phonetic given name" xml:space="preserve">
	  <value>Phonetic given name</value>
	  <comment>Phonetic given name</comment>
  </data>
  <data name="Bio" xml:space="preserve">
	  <value>Bio</value>
	  <comment>Bio</comment>
  </data>
  <data name="Nickname" xml:space="preserve">
	  <value>Nickname</value>
	  <comment>Nickname</comment>
  </data>
  <data name="Locale" xml:space="preserve">
	  <value>Locale</value>
	  <comment>Locale</comment>
  </data>
  <data name="Timezone" xml:space="preserve">
	  <value>Timezone</value>
	  <comment>Timezone</comment>
  </data>
</root>