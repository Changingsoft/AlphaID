<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2 to 10 characters. Leave blank to remove it." xml:space="preserve">
	  <value>2 to 10 characters. Leave blank to remove it.</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Account name" xml:space="preserve">
	  <value>Account name</value>
  </data>
  <data name="Account number" xml:space="preserve">
	  <value>Account number</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Agree the" xml:space="preserve">
    <value>Agree the</value>
  </data>
  <data name="Apply changes" xml:space="preserve">
	  <value>Apply changes</value>
	  <comment>Apply changes</comment>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="Bank name" xml:space="preserve">
	  <value>Bank name</value>
  </data>
  <data name="Bio" xml:space="preserve">
    <value>Bio</value>
  </data>
  <data name="Captcha code" xml:space="preserve">
    <value>Captcha code</value>
  </data>
  <data name="Captcha_Invalid" xml:space="preserve">
    <value>Captcha code is invalid.</value>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Current password" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Current user name" xml:space="preserve">
    <value>Current user name</value>
  </data>
  <data name="Date of birth" xml:space="preserve">
	  <value>Date of birth</value>
  </data>
  <data name="Delete" xml:space="preserve">
	  <value>Delete</value>
	  <comment>Delete</comment>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Domicile" xml:space="preserve">
    <value>Domicile</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email (Optional)" xml:space="preserve">
    <value>Email (Optional)</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Full name" xml:space="preserve">
	  <value>Full name</value>
	  <comment>Full name</comment>
  </data>
  <data name="Full name of organization." xml:space="preserve">
	  <value>Full name of organization.</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Given name" xml:space="preserve">
    <value>Given name</value>
  </data>
  <data name="Identifier type" xml:space="preserve">
	  <value>Identifier type</value>
  </data>
  <data name="Identifier value" xml:space="preserve">
	  <value>Identifier value</value>
  </data>
  <data name="Legal entity identifier" xml:space="preserve">
	  <value>Legal entity identifier</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Middle name" xml:space="preserve">
	  <value>Middle name</value>
  </data>
  <data name="Mobile phone number" xml:space="preserve">
    <value>Mobile phone number</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New email" xml:space="preserve">
    <value>New email</value>
  </data>
  <data name="New mobile phone number" xml:space="preserve">
    <value>New mobile phone number</value>
  </data>
  <data name="New password" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="New user name" xml:space="preserve">
    <value>New user name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone number" xml:space="preserve">
	  <value>Phone number</value>
  </data>
  <data name="Phonetic given name" xml:space="preserve">
	  <value>Phonetic given name</value>
	  <comment>Phonetic given name</comment>
  </data>
  <data name="Phonetic surname" xml:space="preserve">
	  <value>Phonetic surname</value>
	  <comment>Phonetic surname</comment>
  </data>
  <data name="Privacy" xml:space="preserve">
	  <value>Privacy</value>
	  <comment>Privacy</comment>
  </data>
  <data name="Recovery code" xml:space="preserve">
    <value>Recovery code</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="Remember me on this device" xml:space="preserve">
    <value>Remember me on this device</value>
  </data>
  <data name="Remember my decision" xml:space="preserve">
    <value>Remember my decision</value>
  </data>
  <data name="Remember this device" xml:space="preserve">
    <value>Remember this device</value>
  </data>
  <data name="Representative" xml:space="preserve">
    <value>Representative</value>
  </data>
  <data name="Short description about yourself." xml:space="preserve">
    <value>Short description about yourself.</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Taxpayer ID" xml:space="preserve">
    <value>Taxpayer ID</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Two-factor code" xml:space="preserve">
    <value>Two-factor code</value>
  </data>
  <data name="Unified social credit code" xml:space="preserve">
    <value>Unified social credit code</value>
  </data>
  <data name="Update" xml:space="preserve">
	  <value>Update</value>
	  <comment>Update</comment>
  </data>
  <data name="Usage" xml:space="preserve">
	  <value>Usage</value>
  </data>
  <data name="User name" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="Validate_EmailAddress" xml:space="preserve">
    <value>It isn't look like an email address.</value>
  </data>
  <data name="Validate_PasswordConfirm" xml:space="preserve">
    <value>Confirm password is not same as new password.</value>
  </data>
  <data name="Validate_Required" xml:space="preserve">
    <value>The {0} field is required.</value>
  </data>
  <data name="Validate_StringLength" xml:space="preserve">
    <value>The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.</value>
  </data>
  <data name="Verification code" xml:space="preserve">
    <value>Verification code</value>
  </data>
  <data name="Verify" xml:space="preserve">
	  <value>Verify</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Your personal website." xml:space="preserve">
    <value>Your personal website.</value>
  </data>
  <data name="Nick name" xml:space="preserve">
	  <value>Nick name</value>
  </data>
</root>