@page
@using AlphaIdPlatform.Security
@using AspNetWebLib.Helpers
@model IndexModel
@inject IOptions<ProductInfo> Product
@{
    ViewBag.Title = L["Profile"];
}

@section head {
    <link rel="stylesheet" href="~/lib/cropperjs/dist/cropper.min.css" />
    <style>
        .label {
            cursor: pointer;
        }

        .progress {
            display: none;
            margin-bottom: 1rem;
        }

        .img-container img {
            max-width: 100%;
        }
    </style>
}

@Html.DisplayFor(m => m.Result)
<div class="alert" style="display: none;" role="alert"></div>
<div class="progress">
    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
</div>
<div class="d-flex justify-content-between align-items-center">
    <h2>@L["Profile"]</h2>
    <a href="@User.ProfileUrl()" class="btn btn-sm">@L["Go to your profile"]</a>
</div>

<hr />
<div class="row g-3">
    <div class="col-md">
        <div class="form-label">@SL["Surname"]</div>
        <input type="text" class="form-control" disabled="disabled" value="@Model.Person.FamilyName">
    </div>
    <div class="col-md">
        <div class="form-label">@SL["Given name"]</div>
        <input type="text" class="form-control" disabled="disabled" value="@Model.Person.GivenName">
    </div>
    <div class="col-md">
        <div class="form-label">@SL["Full name"]</div>
        <input type="text" class="form-control" disabled="disabled" value="@Model.Person.Name">
    </div>
    <div class="col-md">
        <a asp-page="PersonName" class="btn">@L["Edit person name"]</a>
        <a asp-page="/RealName/Index" class="btn">@L["Real-name authentication"]</a>
    </div>
</div>
<div class="row g-3">
    <div class="col-md">
        <div class="form-label">@SL["Phonetic surname"]</div>
        <input type="text" class="form-control" disabled="disabled" value="@Model.Person.PhoneticSurname">
    </div>
    <div class="col-md">
        <div class="form-label">@SL["Phonetic given name"]</div>
        <input type="text" class="form-control" disabled="disabled" value="@Model.Person.PhoneticGivenName">
    </div>
    <div class="col-md">
    </div>
    <div class="col-md">
    </div>
</div>
<hr />
<div class="row">
    <div class="col-9">
        <form method="post">
            <div class="mb-3">
                <label asp-for="Input.Bio" class="form-label"></label>
                <input asp-for="Input.Bio" class="form-control" />
                <span asp-description-for="Input.Bio"></span>
                <span asp-validation-for="Input.Bio" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Input.DateOfBirth" class="form-label"></label>
                <input asp-for="Input.DateOfBirth" class="form-control" />
                <span asp-description-for="Input.DateOfBirth"></span>
                <span asp-validation-for="Input.DateOfBirth" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Input.Gender" class="form-label"></label>
                <select asp-for="Input.Gender" asp-items="EnumHelper.GetSelectListItems<Gender>()" class="form-select"></select>
                <span asp-description-for="Input.Gender"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Input.Website" class="form-label"></label>
                <input asp-for="Input.Website" class="form-control" />
                <span asp-description-for="Input.Website"></span>
                <span asp-validation-for="Input.Website" class="text-danger"></span>
            </div>

            <div asp-validation-summary="All" class="text-danger"></div>
            <button type="submit" class="btn btn-primary">@L["Update profile"]</button>
        </form>
    </div>
    <div class="col-3 text-center">
        <form method="post">
            <label class="label mb-2" data-toggle="tooltip" title="@L["Change profile picture"]">
                <img class="rounded" id="avatar" src="@User.AvatarUrl()" alt="avatar">
                <input type="file" class="visually-hidden" id="input" name="image" accept="image/*">
                <span class="btn btn-sm">@L["Change profile picture"]</span>
            </label>
            @if (User.HasProfilePicture())
            {
                <button type="submit" class="btn btn-sm" asp-page-handler="ClearProfilePicture" onclick="return confirm('@(L["Remove profile picture?"])');">@L["Remove"]</button>
            }
        </form>
    </div>
</div>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">@L["Crop the image"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <img id="image" src="@User.ProfileUrl()">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@L["Cancel"]</button>
                <button type="button" class="btn btn-primary" id="crop">@L["Crop"]</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/cropperjs/dist/cropper.min.js"></script>
    <script>
        window.addEventListener('DOMContentLoaded', function () {
            var avatar = document.getElementById('avatar');
            var image = document.getElementById('image');
            var input = document.getElementById('input');
            var $progress = $('.progress');
            var $progressBar = $('.progress-bar');
            var $alert = $('.alert');
            var $modal = $('#modal');
            var cropper;

            $('[data-toggle="tooltip"]').tooltip();

            input.addEventListener('change', function (e) {
                var files = e.target.files;
                var done = function (url) {
                    input.value = '';
                    image.src = url;
                    $alert.hide();
                    $modal.modal('show');
                };
                var reader;
                var file;
                var url;

                if (files && files.length > 0) {
                    file = files[0];

                    if (URL) {
                        done(URL.createObjectURL(file));
                    } else if (FileReader) {
                        reader = new FileReader();
                        reader.onload = function (e) {
                            done(reader.result);
                        };
                        reader.readAsDataURL(file);
                    }
                }
            });

            $modal.on('shown.bs.modal', function () {
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 3,
                });
            }).on('hidden.bs.modal', function () {
                cropper.destroy();
                cropper = null;
            });

            document.getElementById('crop').addEventListener('click', function () {
                var initialAvatarURL;
                var canvas;

                $modal.modal('hide');

                if (cropper) {
                    canvas = cropper.getCroppedCanvas({
                        width: 128,
                        height: 128,
                    });
                    initialAvatarURL = avatar.src;
                    avatar.src = canvas.toDataURL();
                    $progress.show();
                    $alert.removeClass('alert-success alert-warning');
                    canvas.toBlob(function (blob) {
                        var formData = new FormData();

                        formData.append('avatar', blob, 'avatar.jpg');
                        formData.append('__RequestVerificationToken', $("[name='__RequestVerificationToken']").val())
                        $.ajax('@(Url.Page(null, "UpdateProfilePicture"))', {
                            method: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,

                            xhr: function () {
                                var xhr = new XMLHttpRequest();

                                xhr.upload.onprogress = function (e) {
                                    var percent = '0';
                                    var percentage = '0%';

                                    if (e.lengthComputable) {
                                        percent = Math.round((e.loaded / e.total) * 100);
                                        percentage = percent + '%';
                                        $progressBar.width(percentage).attr('aria-valuenow', percent).text(percentage);
                                    }
                                };

                                return xhr;
                            },

                            success: function () {
                                $alert.show().addClass('alert-success').text('Upload success');
                            },

                            error: function () {
                                avatar.src = initialAvatarURL;
                                $alert.show().addClass('alert-warning').text('Upload error');
                            },

                            complete: function () {
                                $progress.hide();
                            },
                        });
                    });
                }
            });
        });
    </script>
}