@inject NaturalPersonManager manager
@{
    Layout = "Shared/_Layout";

    var id = this.ViewContext.RouteData.Values["anchor"]?.ToString();
    NaturalPerson? person = null;
    if (id != null)
    {
        person = await this.manager.FindByIdAsync(id);
    }
}

<div class="row g-2 align-items-center mb-3">
    <div class="col">
        <h2 class="page-title">
            @person?.Name
        </h2>
    </div>
</div>
<div class="card">
    <div class="row g-0">
        <div class="col-12 col-md-2 border-end">
            <div class="card-body">
                <div class="list-group list-group-transparent">
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])" asp-match-prefix="false" asp-page="/Detail/Index" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Overview"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/Id" asp-page="/Detail/Id" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["ID"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/RealName" asp-page="/Detail/RealName" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Real Name"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/Membership" asp-page="/Detail/Membership/Index" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Memberships"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/Contacts" asp-page="/Detail/Contacts" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Contacts"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/BankAccount" asp-page="/Detail/BankAccount" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Finacial"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/ExternalLogins" asp-page="/Detail/ExternalLogins" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["External Logins"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/DirectoryAccounts" asp-page="/Detail/DirectoryAccounts" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Directory Accounts"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/Security" asp-page="/Detail/Security" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Security"]</a>
                    <a class="list-group-item list-group-item-action d-flex align-items-center" asp-path="/People/Detail/@(this.ViewContext.RouteData.Values["anchor"])/Advanced" asp-page="/Detail/Advanced" asp-route-anchor="@this.ViewContext.RouteData.Values["anchor"]">@L["Advanced"]</a>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-10 d-flex flex-column">
            <div class="card-body">
                @RenderBody()
            </div>
        </div>
    </div>
</div>


@section Scripts
    {
    @RenderSection("Scripts", false);
}